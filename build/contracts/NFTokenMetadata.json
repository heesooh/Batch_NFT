{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional metadata implementation for ERC-721 non-fungible token standard.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"constructor\":{\"details\":\"Contract constructor.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"stateVariables\":{\"idToUri\":{\"details\":\"Mapping from NFT ID to metadata uri.\"},\"nftName\":{\"details\":\"A descriptive name for a collection of NFTs.\"},\"nftSymbol\":{\"details\":\"An abbreviated name for NFTokens.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"constructor\":{\"notice\":\"When implementing this contract don't forget to set nftName and nftSymbol.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol\":\"NFTokenMetadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@0xcert/ethereum-erc721/src/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0x4dc32b8f780f37c286c9e888376c93d99ba4c62ccc47595d031f6f61e5a3cd0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a66e8e4070bd1c5d0254b56d19f170df3309c2faf357956d1ba6273dda1773\",\"dweb:/ipfs/QmemDeFMgWJvzWo14TQc82tir9cPVNsPJGyZEfULeM6xcF\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x4cdbea942c336fd8d00127cbe97827242a1feb2c690007dd5d615e73d1edabff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a5c1b58e5e7f144030d9e4bf4577e0739eb85b095f2d62a9511a86f9310bc8\",\"dweb:/ipfs/QmcJZaYpTCCCpdgceE8bsUHdExDwKJWRdKhF9rm1U3n3Te\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x617d36f0b31519a8fa7491572e3031d957ad3abd08757b86e82c7c5da9f6d33b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://614b482c8fcdb99ae1cb834eda1330e20a211c665fb7ab486afa0fdd2e8cd516\",\"dweb:/ipfs/Qmc8dvk7XxdhCmf92d9REQ23734gd4QcygDSipi8uDKx6K\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0x7bd28ee87b2d734655fc84db7e4054ba9a6f2639fc42707947b3c398dedc2b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f80b530d043f72a0e7d97ba75583ee74b317977cc66b4aae19c0969189ceaaf\",\"dweb:/ipfs/QmXpQzRkVT91M64WTvduZsc7wN7vaXkPZyuaSM7U2tm5io\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x18115c04a4fae12301fff707293599de9ff3d1ddb20f8a7c1bcffc406edbe337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8eaef182d583aab6c58496b86c9dcaa4d3328768c3bdb28a6f9d2e9b6a6e1e0\",\"dweb:/ipfs/QmZBrVbegPtE4Rsz7bukRaxqPfkNVSkH6CtPyzRur4wkg1\"]},\"@0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":{\"keccak256\":\"0xd5cf8ac87ee4ebebff4e7d6f1b2bf2416016f03151dd47057e40196213cc747b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e0608cf74cec01d15df48a321b425139fc5bdec9d5a178885b4f00ca33df2c5\",\"dweb:/ipfs/QmSiobwuQdewdEzMvLp2XZp4uG5wtsM4m29j1zHWc4QJuU\"]},\"@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol\":{\"keccak256\":\"0x40d99a38f582ec806109b60b52343e7b6d67541c3c1472045243e077b3e4a155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09623177a20bb24872ff5e825281c845f4826341f5673fbed33b684ec0ff94ae\",\"dweb:/ipfs/QmNcNEFqD4xunn2t3PfqoS6ed1esQqQJ4TW6GS3535qPaF\"]},\"@0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0xd640bfd4f7c1c88b528912ecd2446ff7fc7e8a5df195239080d6cbe53b9d136a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7193870cfeb9d306f8945e92e7c382ecd20495e63863858a3d793e59ac84134f\",\"dweb:/ipfs/QmPMD4KCiKVbfNYXtA3rXWMhD68YcWnWJJFSVszajzoHKZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506124b1806101136000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e9919061203c565b6102bc565b6040516100fb91906121bd565b60405180910390f35b61010c610323565b60405161011991906121d8565b60405180910390f35b61013c6004803603810190610137919061208e565b6103b5565b6040516101499190612156565b60405180910390f35b61016c60048036038101906101679190612000565b6104d0565b005b61018860048036038101906101839190611ef5565b6108b3565b005b6101a4600480360381019061019f9190611ef5565b610d05565b005b6101c060048036038101906101bb919061208e565b610d25565b6040516101cd9190612156565b60405180910390f35b6101f060048036038101906101eb9190611e90565b610e0b565b6040516101fd91906121fa565b60405180910390f35b61020e610ec5565b60405161021b91906121d8565b60405180910390f35b61023e60048036038101906102399190611fc4565b610f57565b005b61025a60048036038101906102559190611f44565b611054565b005b6102766004803603810190610271919061208e565b6110ab565b60405161028391906121d8565b60405180910390f35b6102a660048036038101906102a19190611eb9565b61122e565b6040516102b391906121bd565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600580546103329061237e565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061237e565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a91906121d8565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806105c95750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063791906121d8565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071491906121d8565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030380000000000000000000000000000000000000000000000000000815250906107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f491906121d8565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061098457503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610a155750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8391906121d8565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610b69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6091906121d8565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f91906121d8565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce891906121d8565b60405180910390fd5b50610cfc86866112c2565b50505050505050565b610d2083838360405180602001604052806000815250611377565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc91906121d8565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eab91906121d8565b60405180910390fd5b50610ebe82611945565b9050919050565b606060068054610ed49061237e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f009061237e565b8015610f4d5780601f10610f2257610100808354040283529160200191610f4d565b820191906000526020600020905b815481529060010190602001808311610f3057829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161104891906121bd565b60405180910390a35050565b6110a485858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611377565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611189576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118091906121d8565b60405180910390fd5b506007600084815260200190815260200160002080546111a89061237e565b80601f01602080910402602001604051908101604052809291908181526020018280546111d49061237e565b80156112215780601f106111f657610100808354040283529160200191611221565b820191906000526020600020905b81548152906001019060200180831161120457829003601f168201915b5050505050915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506113038261198e565b61130d8183611a2f565b6113178383611bd2565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061144857503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806114d95750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154791906121d8565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061162d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162491906121d8565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30303330303700000000000000000000000000000000000000000000000000008152509061170c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170391906121d8565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030310000000000000000000000000000000000000000000000000000815250906117b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ac91906121d8565b60405180910390fd5b506117c087876112c2565b6117df8773ffffffffffffffffffffffffffffffffffffffff16611d92565b1561193b5760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b81526004016118259493929190612171565b602060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190612065565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f303033303035000000000000000000000000000000000000000000000000000081525090611938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192f91906121d8565b60405180910390fd5b50505b5050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a2c576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aff91906121d8565b60405180910390fd5b506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b5591906122a3565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090611cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca391906121d8565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d4b919061224d565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015611dd45750808214155b92505050919050565b600081359050611dec8161241f565b92915050565b600081359050611e0181612436565b92915050565b600081359050611e168161244d565b92915050565b600081519050611e2b8161244d565b92915050565b60008083601f840112611e4357600080fd5b8235905067ffffffffffffffff811115611e5c57600080fd5b602083019150836001820283011115611e7457600080fd5b9250929050565b600081359050611e8a81612464565b92915050565b600060208284031215611ea257600080fd5b6000611eb084828501611ddd565b91505092915050565b60008060408385031215611ecc57600080fd5b6000611eda85828601611ddd565b9250506020611eeb85828601611ddd565b9150509250929050565b600080600060608486031215611f0a57600080fd5b6000611f1886828701611ddd565b9350506020611f2986828701611ddd565b9250506040611f3a86828701611e7b565b9150509250925092565b600080600080600060808688031215611f5c57600080fd5b6000611f6a88828901611ddd565b9550506020611f7b88828901611ddd565b9450506040611f8c88828901611e7b565b935050606086013567ffffffffffffffff811115611fa957600080fd5b611fb588828901611e31565b92509250509295509295909350565b60008060408385031215611fd757600080fd5b6000611fe585828601611ddd565b9250506020611ff685828601611df2565b9150509250929050565b6000806040838503121561201357600080fd5b600061202185828601611ddd565b925050602061203285828601611e7b565b9150509250929050565b60006020828403121561204e57600080fd5b600061205c84828501611e07565b91505092915050565b60006020828403121561207757600080fd5b600061208584828501611e1c565b91505092915050565b6000602082840312156120a057600080fd5b60006120ae84828501611e7b565b91505092915050565b6120c0816122d7565b82525050565b6120cf816122e9565b82525050565b60006120e082612215565b6120ea818561222b565b93506120fa81856020860161234b565b6121038161240e565b840191505092915050565b600061211982612220565b612123818561223c565b935061213381856020860161234b565b61213c8161240e565b840191505092915050565b61215081612341565b82525050565b600060208201905061216b60008301846120b7565b92915050565b600060808201905061218660008301876120b7565b61219360208301866120b7565b6121a06040830185612147565b81810360608301526121b281846120d5565b905095945050505050565b60006020820190506121d260008301846120c6565b92915050565b600060208201905081810360008301526121f2818461210e565b905092915050565b600060208201905061220f6000830184612147565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061225882612341565b915061226383612341565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612298576122976123b0565b5b828201905092915050565b60006122ae82612341565b91506122b983612341565b9250828210156122cc576122cb6123b0565b5b828203905092915050565b60006122e282612321565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561236957808201518184015260208101905061234e565b83811115612378576000848401525b50505050565b6000600282049050600182168061239657607f821691505b602082108114156123aa576123a96123df565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b612428816122d7565b811461243357600080fd5b50565b61243f816122e9565b811461244a57600080fd5b50565b612456816122f5565b811461246157600080fd5b50565b61246d81612341565b811461247857600080fd5b5056fea264697066735822122062f8e228c3053b4777e979ac0461e7cc5e89711cc8144cd70cd9881bdd7521a164736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10802:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:25",
                "type": ""
              }
            ],
            "src": "7:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:25"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:25",
                "type": ""
              }
            ],
            "src": "152:133:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "342:86:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "352:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "374:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "361:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "390:25:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:32:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:32:25"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "320:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "328:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "336:5:25",
                "type": ""
              }
            ],
            "src": "291:137:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "496:79:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "506:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "521:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "506:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "537:25:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:32:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:32:25"
                }
              ]
            },
            "name": "abi_decode_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "474:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "482:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "490:5:25",
                "type": ""
              }
            ],
            "src": "434:141:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:277:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "717:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "726:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "729:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "719:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "719:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "704:4:25",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:17:25"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "711:3:25"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:35:25"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:30:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "752:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "787:6:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "795:18:25",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:30:25"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:17:25"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "840:8:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "923:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "925:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "925:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "925:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "888:8:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "902:6:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:4:25",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "898:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "898:17:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "884:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:32:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "881:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:41:25"
                  },
                  "nodeType": "YulIf",
                  "src": "878:2:25"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "635:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "643:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "651:8:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "661:6:25",
                "type": ""
              }
            ],
            "src": "594:351:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1003:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1013:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1035:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1022:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1022:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1013:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1078:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1051:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1051:33:25"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "981:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "989:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "997:5:25",
                "type": ""
              }
            ],
            "src": "951:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:196:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1208:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1217:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1220:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1210:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1210:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1210:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1183:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1192:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1175:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1172:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1234:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1249:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1263:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1253:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1278:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1313:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1324:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1309:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1309:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1333:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1288:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1278:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1132:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1143:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1155:6:25",
                "type": ""
              }
            ],
            "src": "1096:262:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1447:324:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1493:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1502:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1505:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1495:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1495:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1495:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1468:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1464:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1464:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1489:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1457:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1519:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1534:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1548:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1538:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1563:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1598:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1609:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1594:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1594:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1618:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1573:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1573:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1563:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1646:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1661:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1665:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1691:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1726:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1737:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1722:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1722:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1746:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1701:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1701:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1691:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1409:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1420:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1432:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1440:6:25",
                "type": ""
              }
            ],
            "src": "1364:407:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:452:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1923:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1932:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1935:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1925:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1925:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1925:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1898:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1907:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1919:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1890:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1887:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1949:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1964:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1968:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1993:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2028:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2039:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2024:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2024:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2048:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2003:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1993:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2076:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2091:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2105:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2095:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2121:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2156:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2167:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2152:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2152:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2176:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2131:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2131:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2121:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2204:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2219:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2233:2:25",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2223:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2249:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2284:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2295:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2304:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2259:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2259:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2249:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1831:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1842:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1854:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1862:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1870:6:25",
                "type": ""
              }
            ],
            "src": "1777:552:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2471:693:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2518:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2527:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2530:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2520:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2520:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2520:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2492:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2501:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2488:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2488:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2513:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:33:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2481:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2544:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2559:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2573:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2563:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2588:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2623:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2634:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2619:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2619:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2643:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2598:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2588:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2671:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2686:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2700:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2690:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2716:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2751:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2762:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2747:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2747:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2771:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2726:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2726:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2716:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2799:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2814:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2828:2:25",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2818:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2844:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2879:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2890:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2875:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2875:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2899:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2854:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2854:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2844:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2927:230:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2942:46:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2973:9:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2984:2:25",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2969:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2969:18:25"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2956:12:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:32:25"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2946:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3035:16:25",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3044:1:25",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3047:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3037:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3037:12:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3037:12:25"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3007:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3015:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3004:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3004:30:25"
                      },
                      "nodeType": "YulIf",
                      "src": "3001:2:25"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3065:82:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3119:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3130:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3115:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3115:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3139:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3083:31:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:64:25"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3065:6:25"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3073:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2409:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2420:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2432:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2440:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2448:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2456:6:25",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2464:6:25",
                "type": ""
              }
            ],
            "src": "2335:829:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3250:321:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3296:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3305:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3308:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3298:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3298:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3298:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3271:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3280:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3267:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3267:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3292:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3263:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3263:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "3260:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3322:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3337:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3351:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3341:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3366:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3401:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3412:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3397:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3397:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3421:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3376:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3366:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3449:115:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3464:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3478:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3468:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3494:60:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3526:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3537:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3522:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3522:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3546:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3504:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:50:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3494:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3212:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3223:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3235:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3243:6:25",
                "type": ""
              }
            ],
            "src": "3170:401:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3660:324:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3706:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3715:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3718:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3708:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3708:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3708:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3681:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3690:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3677:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3677:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3702:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3673:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3673:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "3670:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3732:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3747:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3751:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3776:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3811:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3822:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3807:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3807:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3831:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3786:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3786:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3776:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3859:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3874:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3888:2:25",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3878:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3904:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3939:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3950:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3935:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3935:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3959:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3914:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3914:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3904:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3622:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3633:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3645:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3653:6:25",
                "type": ""
              }
            ],
            "src": "3577:407:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4055:195:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4101:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4110:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4113:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4103:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4103:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4103:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4076:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4085:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4097:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4068:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4068:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "4065:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4127:116:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4142:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4156:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4146:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4171:62:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4205:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4216:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4201:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4201:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4225:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "4181:19:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:52:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4171:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4025:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4036:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4048:6:25",
                "type": ""
              }
            ],
            "src": "3990:260:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4332:206:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4378:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4387:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4390:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4380:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4380:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4380:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4353:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4362:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4349:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4374:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4345:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "4342:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4404:127:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4419:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4433:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4423:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4448:73:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4493:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4504:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4489:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4489:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4513:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4458:30:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4458:63:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4448:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4302:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4313:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4325:6:25",
                "type": ""
              }
            ],
            "src": "4256:282:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4610:196:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4656:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4665:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4668:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4658:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4658:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4658:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4631:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4640:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4627:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4652:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4623:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "4620:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4682:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4697:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4711:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4701:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4726:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4761:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4772:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4757:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4757:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4781:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4736:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4726:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4580:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4591:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4603:6:25",
                "type": ""
              }
            ],
            "src": "4544:262:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4877:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4894:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4917:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4899:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4887:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4887:37:25"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4865:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4872:3:25",
                "type": ""
              }
            ],
            "src": "4812:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4995:50:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5012:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5032:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5017:14:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:21:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5005:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5005:34:25"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4983:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4990:3:25",
                "type": ""
              }
            ],
            "src": "4936:109:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5141:270:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5151:52:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5197:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5165:31:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:38:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5155:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5212:77:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5277:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5282:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5219:57:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5219:70:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5212:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5324:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5331:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5320:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5320:16:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5338:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5343:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5298:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:52:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5298:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5359:46:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5370:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5397:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5375:21:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5375:29:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5366:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5366:39:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5359:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5122:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5129:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5137:3:25",
                "type": ""
              }
            ],
            "src": "5051:360:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5509:272:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5519:53:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5566:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5533:32:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:39:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5523:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5581:78:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5647:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5652:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5588:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:71:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5581:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5694:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5701:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:16:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5708:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5713:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5668:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5668:52:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5668:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5729:46:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5740:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5767:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5745:21:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5745:29:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5736:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:39:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5729:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5490:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5497:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5505:3:25",
                "type": ""
              }
            ],
            "src": "5417:364:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5852:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5869:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5892:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5874:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5874:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5862:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5862:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5862:37:25"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5840:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5847:3:25",
                "type": ""
              }
            ],
            "src": "5787:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6009:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6019:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6031:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6042:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6027:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6019:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6099:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6112:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6123:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6108:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6108:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6055:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6055:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6055:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5981:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5993:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6004:4:25",
                "type": ""
              }
            ],
            "src": "5911:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6339:440:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6349:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6361:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6372:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6357:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6349:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6430:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6443:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6454:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6439:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6439:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6386:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6386:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6511:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6524:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6535:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6520:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6520:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6467:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6467:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6467:72:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6593:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6606:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6617:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6602:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6602:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6549:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:72:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:72:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6642:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6653:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6638:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6638:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6662:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6658:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6658:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6631:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:48:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6631:48:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:84:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6758:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6767:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6696:61:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:76:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6688:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6287:9:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6299:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6307:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6315:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6323:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6334:4:25",
                "type": ""
              }
            ],
            "src": "6139:640:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6877:118:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6887:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6899:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6910:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6895:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6895:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6887:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6961:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6974:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6985:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6970:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6970:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6923:37:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6923:65:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6923:65:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6849:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6861:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6872:4:25",
                "type": ""
              }
            ],
            "src": "6785:210:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7119:195:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7129:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7141:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7152:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7137:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7137:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7129:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7176:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7187:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7172:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7172:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7195:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7201:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7191:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7191:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7165:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7165:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7165:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7221:86:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7293:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7302:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7229:63:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7229:78:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7221:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7091:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7103:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7114:4:25",
                "type": ""
              }
            ],
            "src": "7001:313:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7418:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7428:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7440:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7451:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7436:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7436:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7428:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7508:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7464:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7464:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7464:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7390:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7402:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7413:4:25",
                "type": ""
              }
            ],
            "src": "7320:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7606:40:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7617:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7633:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7627:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7627:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7617:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7589:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7599:6:25",
                "type": ""
              }
            ],
            "src": "7548:98:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7711:40:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7722:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7738:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7732:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7732:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7722:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7694:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7704:6:25",
                "type": ""
              }
            ],
            "src": "7652:99:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7852:73:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7869:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7874:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:19:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7862:19:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7890:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7909:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7914:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7905:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7905:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7890:11:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7824:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7829:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7840:11:25",
                "type": ""
              }
            ],
            "src": "7757:168:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8027:73:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8044:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8049:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8037:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8037:19:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8037:19:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8065:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8084:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8089:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8080:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8080:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8065:11:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7999:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8004:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8015:11:25",
                "type": ""
              }
            ],
            "src": "7931:169:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8150:261:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8160:25:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8183:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8165:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8165:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8160:1:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8194:25:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8217:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8199:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8199:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8194:1:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8357:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8359:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8359:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8359:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8278:1:25"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8285:66:25",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8353:1:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8281:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8281:74:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8275:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8275:81:25"
                  },
                  "nodeType": "YulIf",
                  "src": "8272:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8389:16:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8400:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8403:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8396:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8396:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8389:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8137:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8140:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8146:3:25",
                "type": ""
              }
            ],
            "src": "8106:305:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8462:146:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8472:25:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8495:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8477:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8477:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8472:1:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8506:25:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8529:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8511:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8511:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8506:1:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8553:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8555:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8555:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8555:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8547:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8550:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8544:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8544:8:25"
                  },
                  "nodeType": "YulIf",
                  "src": "8541:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8585:17:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8597:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8600:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8593:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8585:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8448:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8451:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8457:4:25",
                "type": ""
              }
            ],
            "src": "8417:191:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8659:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8669:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8698:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8680:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8680:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8669:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8641:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8651:7:25",
                "type": ""
              }
            ],
            "src": "8614:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8758:48:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8768:32:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8793:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8786:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8786:13:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8779:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8779:21:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8768:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8740:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8750:7:25",
                "type": ""
              }
            ],
            "src": "8716:90:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8856:105:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8866:89:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8881:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8888:66:25",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8877:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8877:78:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8866:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8838:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8848:7:25",
                "type": ""
              }
            ],
            "src": "8812:149:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9012:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9022:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9037:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9044:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9033:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9033:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9022:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8994:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9004:7:25",
                "type": ""
              }
            ],
            "src": "8967:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9144:32:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9154:16:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9165:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9154:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9126:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9136:7:25",
                "type": ""
              }
            ],
            "src": "9099:77:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9231:258:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9241:10:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9250:1:25",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9245:1:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9310:63:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9335:3:25"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9340:1:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9331:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9331:11:25"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9354:3:25"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9359:1:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9350:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9350:11:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9344:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9344:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9324:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9324:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9324:39:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9271:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9274:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9268:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9268:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9282:19:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9284:15:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9293:1:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9296:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9289:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9289:10:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9284:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9264:3:25",
                    "statements": []
                  },
                  "src": "9260:113:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9407:76:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9457:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9462:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9453:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9453:16:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9471:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9446:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9446:27:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9446:27:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9388:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9391:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9385:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9385:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "9382:2:25"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9213:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9218:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9223:6:25",
                "type": ""
              }
            ],
            "src": "9182:307:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9546:269:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9556:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9570:4:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9576:1:25",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9566:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9566:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9556:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9587:38:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9617:4:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9623:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9613:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9613:12:25"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9591:18:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9664:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9678:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9692:6:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9700:4:25",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9688:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9688:17:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9678:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9644:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9637:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9637:26:25"
                  },
                  "nodeType": "YulIf",
                  "src": "9634:2:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9767:42:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "9781:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9781:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9781:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9731:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9754:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9762:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9751:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9751:14:25"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9728:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9728:38:25"
                  },
                  "nodeType": "YulIf",
                  "src": "9725:2:25"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9530:4:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9539:6:25",
                "type": ""
              }
            ],
            "src": "9495:320:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9849:152:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9866:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9869:77:25",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9859:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9859:88:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9859:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9963:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9966:4:25",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9956:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9956:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9987:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9990:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9980:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9980:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9980:15:25"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9821:180:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10035:152:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10052:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10055:77:25",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10045:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10045:88:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10045:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10149:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10152:4:25",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10142:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10142:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10173:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10176:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10166:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10166:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10166:15:25"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10007:180:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10241:54:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10251:38:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10269:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10276:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10265:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10265:14:25"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10285:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10281:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10281:7:25"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10261:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10261:28:25"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "10251:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10224:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "10234:6:25",
                "type": ""
              }
            ],
            "src": "10193:102:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10344:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10401:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10410:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10413:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10403:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10403:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10403:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10367:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10392:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10374:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10374:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10364:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10364:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10357:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10357:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "10354:2:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10337:5:25",
                "type": ""
              }
            ],
            "src": "10301:122:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10469:76:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10523:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10532:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10535:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10525:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10525:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10525:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10492:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10514:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10499:14:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10499:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10489:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10489:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10482:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10482:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "10479:2:25"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10462:5:25",
                "type": ""
              }
            ],
            "src": "10429:116:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10593:78:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10649:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10658:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10661:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10651:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10651:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10651:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10616:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10640:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "10623:16:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10623:23:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10613:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10613:34:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10606:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10606:42:25"
                  },
                  "nodeType": "YulIf",
                  "src": "10603:2:25"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10586:5:25",
                "type": ""
              }
            ],
            "src": "10551:120:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10720:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10777:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10786:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10789:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10779:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10779:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10779:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10743:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10768:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10750:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10750:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10740:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10740:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "10730:2:25"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10713:5:25",
                "type": ""
              }
            ],
            "src": "10677:122:25"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "204:2481:7:-:0;;;686:83;;;;;;;;;;462:4:11;428:19;:31;448:10;428:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2807:4:8;2773:19;:31;2793:10;2773:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;742:4:7;708:19;:31;728:10;708:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;204:2481;;;;;;",
  "deployedSourceMap": "204:2481:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:163:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;890:113:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7903:173:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5768:338;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5018;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4282:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7469:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7017:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1113:121:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6508:223:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3684:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1380:171:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8337:182:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;684:163:11;788:4;809:19;:33;829:12;809:33;;;;;;;;;;;;;;;;;;;;;;;;;;;802:40;;684:163;;;:::o;890:113:7:-;954:19;991:7;983:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:113;:::o;7903:173:8:-;8025:7;8002:8;2673:1;2642:33;;:9;:19;2652:8;2642:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2677:13;;;;;;;;;;;;;;;;;2634:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8049:12:::1;:22;8062:8;8049:22;;;;;;;;;;;;;;;;;;;;;8042:29;;7903:173:::0;;;;:::o;5768:338::-;5875:8;1860:18;1881:9;:19;1891:8;1881:19;;;;;;;;;;;;;;;;;;;;;1860:40;;1935:10;1921:24;;:10;:24;;;:68;;;;1949:16;:28;1966:10;1949:28;;;;;;;;;;;;;;;:40;1978:10;1949:40;;;;;;;;;;;;;;;;;;;;;;;;;1921:68;1997:21;;;;;;;;;;;;;;;;;1906:118;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5902:8:::1;2673:1;2642:33;;:9;:19;2652:8;2642:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2677:13;;;;;;;;;;;;;;;;::::0;2634:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5920:18:::2;5941:9;:19;5951:8;5941:19;;;;;;;;;;;;;;;;;;;;;5920:40;;5987:10;5974:23;;:9;:23;;;;5999:8;;;;;;;;;;;;;;;;::::0;5966:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6040:9;6015:12;:22;6028:8;6015:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6092:8;6081:9;6060:41;;6069:10;6060:41;;;;;;;;;;;;2697:1;2030::::1;5768:338:::0;;;;:::o;5018:::-;5144:8;2224:18;2245:9;:19;2255:8;2245:19;;;;;;;;;;;;;;;;;;;;;2224:40;;2299:10;2285:24;;:10;:24;;;:70;;;;2345:10;2319:36;;:12;:22;2332:8;2319:22;;;;;;;;;;;;;;;;;;;;;:36;;;2285:70;:120;;;;2365:16;:28;2382:10;2365:28;;;;;;;;;;;;;;;:40;2394:10;2365:40;;;;;;;;;;;;;;;;;;;;;;;;;2285:120;2413:30;;;;;;;;;;;;;;;;;2270:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5171:8:::1;2673:1;2642:33;;:9;:19;2652:8;2642:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2677:13;;;;;;;;;;;;;;;;::::0;2634:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5189:18:::2;5210:9;:19;5220:8;5210:19;;;;;;;;;;;;;;;;;;;;;5189:40;;5257:5;5243:19;;:10;:19;;;5264:9;;;;;;;;;;;;;;;;::::0;5235:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5303:1;5288:17;;:3;:17;;;;5307:12;;;;;;;;;;;;;;;;::::0;5280:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5327:24;5337:3;5342:8;5327:9;:24::i;:::-;2697:1;2455::::1;5018:338:::0;;;;;:::o;4282:170::-;4404:43;4422:5;4429:3;4434:8;4404:43;;;;;;;;;;;;:17;:43::i;:::-;4282:170;;;:::o;7469:198::-;7560:14;7593:9;:19;7603:8;7593:19;;;;;;;;;;;;;;;;;;;;;7584:28;;7644:1;7626:20;;:6;:20;;;;7648:13;;;;;;;;;;;;;;;;;7618:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7469:198;;;:::o;7017:194::-;7108:7;7151:1;7133:20;;:6;:20;;;;7155:12;;;;;;;;;;;;;;;;;7125:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7181:25;7199:6;7181:17;:25::i;:::-;7174:32;;7017:194;;;:::o;1113:121:7:-;1179:21;1220:9;1210:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1113:121;:::o;6508:223:8:-;6658:9;6616:16;:28;6633:10;6616:28;;;;;;;;;;;;;;;:39;6645:9;6616:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;6705:9;6678:48;;6693:10;6678:48;;;6716:9;6678:48;;;;;;:::i;:::-;;;;;;;;6508:223;;:::o;3684:199::-;3832:46;3850:5;3857:3;3862:8;3872:5;;3832:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3684:199;;;;;:::o;1380:171:7:-;1499:13;1476:8;2673:1:8;2642:33;;:9;:19;2652:8;2642:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2677:13;;;;;;;;;;;;;;;;;2634:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1529:7:7::1;:17;1537:8;1529:17;;;;;;;;;;;1522:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:171:::0;;;;:::o;8337:182:8:-;8458:4;8479:16;:24;8496:6;8479:24;;;;;;;;;;;;;;;:35;8504:9;8479:35;;;;;;;;;;;;;;;;;;;;;;;;;8472:42;;8337:182;;;;:::o;8702:262::-;8785:12;8800:9;:19;8810:8;8800:19;;;;;;;;;;;;;;;;;;;;;8785:34;;8825:24;8840:8;8825:14;:24::i;:::-;8856:30;8871:4;8877:8;8856:14;:30::i;:::-;8892:26;8904:3;8909:8;8892:11;:26::i;:::-;8950:8;8945:3;8930:29;;8939:4;8930:29;;;;;;;;;;;;8702:262;;;:::o;12038:569::-;12179:8;2224:18;2245:9;:19;2255:8;2245:19;;;;;;;;;;;;;;;;;;;;;2224:40;;2299:10;2285:24;;:10;:24;;;:70;;;;2345:10;2319:36;;:12;:22;2332:8;2319:22;;;;;;;;;;;;;;;;;;;;;:36;;;2285:70;:120;;;;2365:16;:28;2382:10;2365:28;;;;;;;;;;;;;;;:40;2394:10;2365:40;;;;;;;;;;;;;;;;;;;;;;;;;2285:120;2413:30;;;;;;;;;;;;;;;;;2270:179;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12206:8:::1;2673:1;2642:33;;:9;:19;2652:8;2642:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2677:13;;;;;;;;;;;;;;;;::::0;2634:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12224:18:::2;12245:9;:19;12255:8;12245:19;;;;;;;;;;;;;;;;;;;;;12224:40;;12292:5;12278:19;;:10;:19;;;12299:9;;;;;;;;;;;;;;;;::::0;12270:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12338:1;12323:17;;:3;:17;;;;12342:12;;;;;;;;;;;;;;;;::::0;12315:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12362:24;12372:3;12377:8;12362:9;:24::i;:::-;12397:16;:3;:14;;;:16::i;:::-;12393:210;;;12427:13;12463:3;12443:41;;;12485:10;12497:5;12504:8;12514:5;12443:77;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12427:93;;1110:10;12546:24;;12536:34;;;:6;:34;;;;12572:23;;;;;;;;;;;;;;;;::::0;12528:68:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12393:210;;2697:1;2455::::1;12038:569:::0;;;;;;:::o;11615:154::-;11713:7;11737:19;:27;11757:6;11737:27;;;;;;;;;;;;;;;;11730:34;;11615:154;;;:::o;12734:164::-;12842:1;12808:36;;:12;:22;12821:8;12808:22;;;;;;;;;;;;;;;;;;;;;:36;;;12804:90;;12865:12;:22;12878:8;12865:22;;;;;;;;;;;;12858:29;;;;;;;;;;;12804:90;12734:164;:::o;10559:252::-;10692:5;10669:28;;:9;:19;10679:8;10669:19;;;;;;;;;;;;;;;;;;;;;:28;;;10699:9;;;;;;;;;;;;;;;;;10661:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10773:1;10744:19;:26;10764:5;10744:26;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;10715:19;:26;10735:5;10715:26;;;;;;;;;;;;;;;:59;;;;10787:9;:19;10797:8;10787:19;;;;;;;;;;;;10780:26;;;;;;;;;;;10559:252;;:::o;11070:257::-;11206:1;11175:33;;:9;:19;11185:8;11175:19;;;;;;;;;;;;;;;;;;;;;:33;;;11210:18;;;;;;;;;;;;;;;;;11167:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;11258:3;11236:9;:19;11246:8;11236:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11321:1;11294:19;:24;11314:3;11294:24;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;11267:19;:24;11287:3;11267:24;;;;;;;;;;;;;;;:55;;;;11070:257;;:::o;466:762:9:-;544:17;976:16;998:19;1020:66;998:88;;;;1127:5;1115:18;1103:30;;1192:3;1180:15;;:8;:15;;:42;;;;;1211:11;1199:8;:23;;1180:42;1164:59;;466:762;;;;;:::o;7:139:25:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;;;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;951:139::-;;1035:6;1022:20;1013:29;;1051:33;1078:5;1051:33;:::i;:::-;1003:87;;;;:::o;1096:262::-;;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1220:1;1217;1210:12;1172:2;1263:1;1288:53;1333:7;1324:6;1313:9;1309:22;1288:53;:::i;:::-;1278:63;;1234:117;1162:196;;;;:::o;1364:407::-;;;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;1505:1;1502;1495:12;1457:2;1548:1;1573:53;1618:7;1609:6;1598:9;1594:22;1573:53;:::i;:::-;1563:63;;1519:117;1675:2;1701:53;1746:7;1737:6;1726:9;1722:22;1701:53;:::i;:::-;1691:63;;1646:118;1447:324;;;;;:::o;1777:552::-;;;;1919:2;1907:9;1898:7;1894:23;1890:32;1887:2;;;1935:1;1932;1925:12;1887:2;1978:1;2003:53;2048:7;2039:6;2028:9;2024:22;2003:53;:::i;:::-;1993:63;;1949:117;2105:2;2131:53;2176:7;2167:6;2156:9;2152:22;2131:53;:::i;:::-;2121:63;;2076:118;2233:2;2259:53;2304:7;2295:6;2284:9;2280:22;2259:53;:::i;:::-;2249:63;;2204:118;1877:452;;;;;:::o;2335:829::-;;;;;;2513:3;2501:9;2492:7;2488:23;2484:33;2481:2;;;2530:1;2527;2520:12;2481:2;2573:1;2598:53;2643:7;2634:6;2623:9;2619:22;2598:53;:::i;:::-;2588:63;;2544:117;2700:2;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2671:118;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2984:2;2973:9;2969:18;2956:32;3015:18;3007:6;3004:30;3001:2;;;3047:1;3044;3037:12;3001:2;3083:64;3139:7;3130:6;3119:9;3115:22;3083:64;:::i;:::-;3065:82;;;;2927:230;2471:693;;;;;;;;:::o;3170:401::-;;;3292:2;3280:9;3271:7;3267:23;3263:32;3260:2;;;3308:1;3305;3298:12;3260:2;3351:1;3376:53;3421:7;3412:6;3401:9;3397:22;3376:53;:::i;:::-;3366:63;;3322:117;3478:2;3504:50;3546:7;3537:6;3526:9;3522:22;3504:50;:::i;:::-;3494:60;;3449:115;3250:321;;;;;:::o;3577:407::-;;;3702:2;3690:9;3681:7;3677:23;3673:32;3670:2;;;3718:1;3715;3708:12;3670:2;3761:1;3786:53;3831:7;3822:6;3811:9;3807:22;3786:53;:::i;:::-;3776:63;;3732:117;3888:2;3914:53;3959:7;3950:6;3939:9;3935:22;3914:53;:::i;:::-;3904:63;;3859:118;3660:324;;;;;:::o;3990:260::-;;4097:2;4085:9;4076:7;4072:23;4068:32;4065:2;;;4113:1;4110;4103:12;4065:2;4156:1;4181:52;4225:7;4216:6;4205:9;4201:22;4181:52;:::i;:::-;4171:62;;4127:116;4055:195;;;;:::o;4256:282::-;;4374:2;4362:9;4353:7;4349:23;4345:32;4342:2;;;4390:1;4387;4380:12;4342:2;4433:1;4458:63;4513:7;4504:6;4493:9;4489:22;4458:63;:::i;:::-;4448:73;;4404:127;4332:206;;;;:::o;4544:262::-;;4652:2;4640:9;4631:7;4627:23;4623:32;4620:2;;;4668:1;4665;4658:12;4620:2;4711:1;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4682:117;4610:196;;;;:::o;4812:118::-;4899:24;4917:5;4899:24;:::i;:::-;4894:3;4887:37;4877:53;;:::o;4936:109::-;5017:21;5032:5;5017:21;:::i;:::-;5012:3;5005:34;4995:50;;:::o;5051:360::-;;5165:38;5197:5;5165:38;:::i;:::-;5219:70;5282:6;5277:3;5219:70;:::i;:::-;5212:77;;5298:52;5343:6;5338:3;5331:4;5324:5;5320:16;5298:52;:::i;:::-;5375:29;5397:6;5375:29;:::i;:::-;5370:3;5366:39;5359:46;;5141:270;;;;;:::o;5417:364::-;;5533:39;5566:5;5533:39;:::i;:::-;5588:71;5652:6;5647:3;5588:71;:::i;:::-;5581:78;;5668:52;5713:6;5708:3;5701:4;5694:5;5690:16;5668:52;:::i;:::-;5745:29;5767:6;5745:29;:::i;:::-;5740:3;5736:39;5729:46;;5509:272;;;;;:::o;5787:118::-;5874:24;5892:5;5874:24;:::i;:::-;5869:3;5862:37;5852:53;;:::o;5911:222::-;;6042:2;6031:9;6027:18;6019:26;;6055:71;6123:1;6112:9;6108:17;6099:6;6055:71;:::i;:::-;6009:124;;;;:::o;6139:640::-;;6372:3;6361:9;6357:19;6349:27;;6386:71;6454:1;6443:9;6439:17;6430:6;6386:71;:::i;:::-;6467:72;6535:2;6524:9;6520:18;6511:6;6467:72;:::i;:::-;6549;6617:2;6606:9;6602:18;6593:6;6549:72;:::i;:::-;6668:9;6662:4;6658:20;6653:2;6642:9;6638:18;6631:48;6696:76;6767:4;6758:6;6696:76;:::i;:::-;6688:84;;6339:440;;;;;;;:::o;6785:210::-;;6910:2;6899:9;6895:18;6887:26;;6923:65;6985:1;6974:9;6970:17;6961:6;6923:65;:::i;:::-;6877:118;;;;:::o;7001:313::-;;7152:2;7141:9;7137:18;7129:26;;7201:9;7195:4;7191:20;7187:1;7176:9;7172:17;7165:47;7229:78;7302:4;7293:6;7229:78;:::i;:::-;7221:86;;7119:195;;;;:::o;7320:222::-;;7451:2;7440:9;7436:18;7428:26;;7464:71;7532:1;7521:9;7517:17;7508:6;7464:71;:::i;:::-;7418:124;;;;:::o;7548:98::-;;7633:5;7627:12;7617:22;;7606:40;;;:::o;7652:99::-;;7738:5;7732:12;7722:22;;7711:40;;;:::o;7757:168::-;;7874:6;7869:3;7862:19;7914:4;7909:3;7905:14;7890:29;;7852:73;;;;:::o;7931:169::-;;8049:6;8044:3;8037:19;8089:4;8084:3;8080:14;8065:29;;8027:73;;;;:::o;8106:305::-;;8165:20;8183:1;8165:20;:::i;:::-;8160:25;;8199:20;8217:1;8199:20;:::i;:::-;8194:25;;8353:1;8285:66;8281:74;8278:1;8275:81;8272:2;;;8359:18;;:::i;:::-;8272:2;8403:1;8400;8396:9;8389:16;;8150:261;;;;:::o;8417:191::-;;8477:20;8495:1;8477:20;:::i;:::-;8472:25;;8511:20;8529:1;8511:20;:::i;:::-;8506:25;;8550:1;8547;8544:8;8541:2;;;8555:18;;:::i;:::-;8541:2;8600:1;8597;8593:9;8585:17;;8462:146;;;;:::o;8614:96::-;;8680:24;8698:5;8680:24;:::i;:::-;8669:35;;8659:51;;;:::o;8716:90::-;;8793:5;8786:13;8779:21;8768:32;;8758:48;;;:::o;8812:149::-;;8888:66;8881:5;8877:78;8866:89;;8856:105;;;:::o;8967:126::-;;9044:42;9037:5;9033:54;9022:65;;9012:81;;;:::o;9099:77::-;;9165:5;9154:16;;9144:32;;;:::o;9182:307::-;9250:1;9260:113;9274:6;9271:1;9268:13;9260:113;;;9359:1;9354:3;9350:11;9344:18;9340:1;9335:3;9331:11;9324:39;9296:2;9293:1;9289:10;9284:15;;9260:113;;;9391:6;9388:1;9385:13;9382:2;;;9471:1;9462:6;9457:3;9453:16;9446:27;9382:2;9231:258;;;;:::o;9495:320::-;;9576:1;9570:4;9566:12;9556:22;;9623:1;9617:4;9613:12;9644:18;9634:2;;9700:4;9692:6;9688:17;9678:27;;9634:2;9762;9754:6;9751:14;9731:18;9728:38;9725:2;;;9781:18;;:::i;:::-;9725:2;9546:269;;;;:::o;9821:180::-;9869:77;9866:1;9859:88;9966:4;9963:1;9956:15;9990:4;9987:1;9980:15;10007:180;10055:77;10052:1;10045:88;10152:4;10149:1;10142:15;10176:4;10173:1;10166:15;10193:102;;10285:2;10281:7;10276:2;10269:5;10265:14;10261:28;10251:38;;10241:54;;;:::o;10301:122::-;10374:24;10392:5;10374:24;:::i;:::-;10367:5;10364:35;10354:2;;10413:1;10410;10403:12;10354:2;10344:79;:::o;10429:116::-;10499:21;10514:5;10499:21;:::i;:::-;10492:5;10489:32;10479:2;;10535:1;10532;10525:12;10479:2;10469:76;:::o;10551:120::-;10623:23;10640:5;10623:23;:::i;:::-;10616:5;10613:34;10603:2;;10661:1;10658;10651:12;10603:2;10593:78;:::o;10677:122::-;10750:24;10768:5;10750:24;:::i;:::-;10743:5;10740:35;10730:2;;10789:1;10786;10779:12;10730:2;10720:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"./nf-token.sol\";\nimport \"./erc721-metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n */\ncontract NFTokenMetadata is\n  NFToken,\n  ERC721Metadata\n{\n\n  /**\n   * @dev A descriptive name for a collection of NFTs.\n   */\n  string internal nftName;\n\n  /**\n   * @dev An abbreviated name for NFTokens.\n   */\n  string internal nftSymbol;\n\n  /**\n   * @dev Mapping from NFT ID to metadata uri.\n   */\n  mapping (uint256 => string) internal idToUri;\n\n  /**\n   * @dev Contract constructor.\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n   */\n  constructor()\n  {\n    supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n  }\n\n  /**\n   * @dev Returns a descriptive name for a collection of NFTokens.\n   * @return _name Representing name.\n   */\n  function name()\n    external\n    override\n    view\n    returns (string memory _name)\n  {\n    _name = nftName;\n  }\n\n  /**\n   * @dev Returns an abbreviated name for NFTokens.\n   * @return _symbol Representing symbol.\n   */\n  function symbol()\n    external\n    override\n    view\n    returns (string memory _symbol)\n  {\n    _symbol = nftSymbol;\n  }\n\n  /**\n   * @dev A distinct URI (RFC 3986) for a given NFT.\n   * @param _tokenId Id for which we want uri.\n   * @return URI of _tokenId.\n   */\n  function tokenURI(\n    uint256 _tokenId\n  )\n    external\n    override\n    view\n    validNFToken(_tokenId)\n    returns (string memory)\n  {\n    return idToUri[_tokenId];\n  }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is an internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n   * NFT.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    uint256 _tokenId\n  )\n    internal\n    override\n    virtual\n  {\n    super._burn(_tokenId);\n\n    if (bytes(idToUri[_tokenId]).length != 0)\n    {\n      delete idToUri[_tokenId];\n    }\n  }\n\n  /**\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n   * @notice This is an internal function which should be called from user-implemented external\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _tokenId Id for which we want URI.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function _setTokenUri(\n    uint256 _tokenId,\n    string memory _uri\n  )\n    internal\n    validNFToken(_tokenId)\n  {\n    idToUri[_tokenId] = _uri;\n  }\n\n}\n",
  "sourcePath": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol",
  "ast": {
    "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1683
      ],
      "ERC165": [
        1695
      ],
      "ERC721": [
        842
      ],
      "ERC721Metadata": [
        711
      ],
      "ERC721TokenReceiver": [
        729
      ],
      "NFToken": [
        1651
      ],
      "NFTokenMetadata": [
        963
      ],
      "SupportsInterface": [
        1732
      ]
    },
    "id": 964,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 844,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:7"
      },
      {
        "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
        "id": 845,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 1652,
        "src": "56:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
        "id": 846,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 712,
        "src": "81:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 848,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1651,
              "src": "234:7:7"
            },
            "id": 849,
            "nodeType": "InheritanceSpecifier",
            "src": "234:7:7"
          },
          {
            "baseName": {
              "id": 850,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 711,
              "src": "245:14:7"
            },
            "id": 851,
            "nodeType": "InheritanceSpecifier",
            "src": "245:14:7"
          }
        ],
        "contractDependencies": [
          711,
          842,
          1651,
          1695,
          1732
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 847,
          "nodeType": "StructuredDocumentation",
          "src": "114:89:7",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
        "id": 963,
        "linearizedBaseContracts": [
          963,
          711,
          1651,
          1732,
          1695,
          842
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 852,
              "nodeType": "StructuredDocumentation",
              "src": "265:64:7",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
            "id": 854,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "332:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 853,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "332:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 855,
              "nodeType": "StructuredDocumentation",
              "src": "360:53:7",
              "text": " @dev An abbreviated name for NFTokens."
            },
            "id": 857,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "416:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 856,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "416:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 858,
              "nodeType": "StructuredDocumentation",
              "src": "446:56:7",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
            "id": 862,
            "mutability": "mutable",
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "505:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 861,
              "keyType": {
                "id": 859,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "514:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "505:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 860,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "525:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "702:67:7",
              "statements": [
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 866,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "708:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 868,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "708:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "742:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "708:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "708:38:7"
                }
              ]
            },
            "documentation": {
              "id": 863,
              "nodeType": "StructuredDocumentation",
              "src": "554:129:7",
              "text": " @dev Contract constructor.\n @notice When implementing this contract don't forget to set nftName and nftSymbol."
            },
            "id": 873,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:7"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:0:7"
            },
            "scope": 963,
            "src": "686:83:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              696
            ],
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "977:26:7",
              "statements": [
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 880,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "983:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 881,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "991:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "983:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "983:15:7"
                }
              ]
            },
            "documentation": {
              "id": 874,
              "nodeType": "StructuredDocumentation",
              "src": "773:114:7",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 876,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "923:8:7"
            },
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:2:7"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "954:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:21:7"
            },
            "scope": 963,
            "src": "890:113:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              702
            ],
            "body": {
              "id": 896,
              "nodeType": "Block",
              "src": "1204:30:7",
              "statements": [
                {
                  "expression": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 892,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "1210:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 893,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "1220:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1210:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:19:7"
                }
              ]
            },
            "documentation": {
              "id": 886,
              "nodeType": "StructuredDocumentation",
              "src": "1007:103:7",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
            "id": 897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1148:8:7"
            },
            "parameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:2:7"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "1179:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:23:7"
            },
            "scope": 963,
            "src": "1113:121:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              710
            ],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "1516:35:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 909,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "1529:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 911,
                    "indexExpression": {
                      "id": 910,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "1537:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1529:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 908,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "1522:24:7"
                }
              ]
            },
            "documentation": {
              "id": 898,
              "nodeType": "StructuredDocumentation",
              "src": "1238:139:7",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 904,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 900,
                    "src": "1476:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 905,
                "modifierName": {
                  "id": 903,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1110,
                  "src": "1463:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1463:22:7"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 902,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1441:8:7"
            },
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "1403:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:26:7"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "1499:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:15:7"
            },
            "scope": 963,
            "src": "1380:171:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1473
            ],
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "2025:123:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 924,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "2043:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 921,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2031:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$963_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1473,
                      "src": "2031:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:21:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 929,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "2069:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 931,
                            "indexExpression": {
                              "id": 930,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "2077:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2069:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2063:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 927,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2063:5:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2063:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2063:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2098:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2063:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 942,
                  "nodeType": "IfStatement",
                  "src": "2059:85:7",
                  "trueBody": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "2105:39:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2113:24:7",
                          "subExpression": {
                            "baseExpression": {
                              "id": 936,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "2120:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 938,
                            "indexExpression": {
                              "id": 937,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "2128:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2120:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "ExpressionStatement",
                        "src": "2113:24:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 915,
              "nodeType": "StructuredDocumentation",
              "src": "1555:386:7",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 919,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2002:8:7"
            },
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "1964:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1958:26:7"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:0:7"
            },
            "scope": 963,
            "src": "1944:204:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "2647:35:7",
              "statements": [
                {
                  "expression": {
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 955,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "2653:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 957,
                      "indexExpression": {
                        "id": 956,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "2661:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2653:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 958,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "2673:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2653:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:24:7"
                }
              ]
            },
            "documentation": {
              "id": 945,
              "nodeType": "StructuredDocumentation",
              "src": "2152:378:7",
              "text": " @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 952,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 947,
                    "src": "2635:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 953,
                "modifierName": {
                  "id": 951,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1110,
                  "src": "2622:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2622:22:7"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "2560:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "2582:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2554:50:7"
            },
            "returnParameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:0:7"
            },
            "scope": 963,
            "src": "2533:149:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 964,
        "src": "204:2481:7"
      }
    ],
    "src": "32:2654:7"
  },
  "legacyAST": {
    "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1683
      ],
      "ERC165": [
        1695
      ],
      "ERC721": [
        842
      ],
      "ERC721Metadata": [
        711
      ],
      "ERC721TokenReceiver": [
        729
      ],
      "NFToken": [
        1651
      ],
      "NFTokenMetadata": [
        963
      ],
      "SupportsInterface": [
        1732
      ]
    },
    "id": 964,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 844,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:7"
      },
      {
        "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
        "id": 845,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 1652,
        "src": "56:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
        "id": 846,
        "nodeType": "ImportDirective",
        "scope": 964,
        "sourceUnit": 712,
        "src": "81:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 848,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1651,
              "src": "234:7:7"
            },
            "id": 849,
            "nodeType": "InheritanceSpecifier",
            "src": "234:7:7"
          },
          {
            "baseName": {
              "id": 850,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 711,
              "src": "245:14:7"
            },
            "id": 851,
            "nodeType": "InheritanceSpecifier",
            "src": "245:14:7"
          }
        ],
        "contractDependencies": [
          711,
          842,
          1651,
          1695,
          1732
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 847,
          "nodeType": "StructuredDocumentation",
          "src": "114:89:7",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
        "id": 963,
        "linearizedBaseContracts": [
          963,
          711,
          1651,
          1732,
          1695,
          842
        ],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 852,
              "nodeType": "StructuredDocumentation",
              "src": "265:64:7",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
            "id": 854,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "332:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 853,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "332:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 855,
              "nodeType": "StructuredDocumentation",
              "src": "360:53:7",
              "text": " @dev An abbreviated name for NFTokens."
            },
            "id": 857,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "416:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 856,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "416:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 858,
              "nodeType": "StructuredDocumentation",
              "src": "446:56:7",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
            "id": 862,
            "mutability": "mutable",
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 963,
            "src": "505:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 861,
              "keyType": {
                "id": 859,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "514:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "505:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 860,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "525:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "702:67:7",
              "statements": [
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 866,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "708:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 868,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "708:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "742:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "708:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "708:38:7"
                }
              ]
            },
            "documentation": {
              "id": 863,
              "nodeType": "StructuredDocumentation",
              "src": "554:129:7",
              "text": " @dev Contract constructor.\n @notice When implementing this contract don't forget to set nftName and nftSymbol."
            },
            "id": 873,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:7"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:0:7"
            },
            "scope": 963,
            "src": "686:83:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              696
            ],
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "977:26:7",
              "statements": [
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 880,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "983:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 881,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "991:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "983:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "983:15:7"
                }
              ]
            },
            "documentation": {
              "id": 874,
              "nodeType": "StructuredDocumentation",
              "src": "773:114:7",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 876,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "923:8:7"
            },
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:2:7"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "954:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:21:7"
            },
            "scope": 963,
            "src": "890:113:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              702
            ],
            "body": {
              "id": 896,
              "nodeType": "Block",
              "src": "1204:30:7",
              "statements": [
                {
                  "expression": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 892,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "1210:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 893,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "1220:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1210:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:19:7"
                }
              ]
            },
            "documentation": {
              "id": 886,
              "nodeType": "StructuredDocumentation",
              "src": "1007:103:7",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
            "id": 897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1148:8:7"
            },
            "parameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:2:7"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "1179:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:23:7"
            },
            "scope": 963,
            "src": "1113:121:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              710
            ],
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "1516:35:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 909,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "1529:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 911,
                    "indexExpression": {
                      "id": 910,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "1537:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1529:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 908,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "1522:24:7"
                }
              ]
            },
            "documentation": {
              "id": 898,
              "nodeType": "StructuredDocumentation",
              "src": "1238:139:7",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 904,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 900,
                    "src": "1476:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 905,
                "modifierName": {
                  "id": 903,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1110,
                  "src": "1463:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1463:22:7"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 902,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1441:8:7"
            },
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "1403:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:26:7"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "1499:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:15:7"
            },
            "scope": 963,
            "src": "1380:171:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1473
            ],
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "2025:123:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 924,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "2043:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 921,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2031:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$963_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1473,
                      "src": "2031:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:21:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 929,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "2069:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 931,
                            "indexExpression": {
                              "id": 930,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "2077:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2069:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2063:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 927,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2063:5:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2063:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2063:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2098:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2063:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 942,
                  "nodeType": "IfStatement",
                  "src": "2059:85:7",
                  "trueBody": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "2105:39:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2113:24:7",
                          "subExpression": {
                            "baseExpression": {
                              "id": 936,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "2120:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 938,
                            "indexExpression": {
                              "id": 937,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "2128:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2120:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "ExpressionStatement",
                        "src": "2113:24:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 915,
              "nodeType": "StructuredDocumentation",
              "src": "1555:386:7",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 919,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2002:8:7"
            },
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "1964:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1958:26:7"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:0:7"
            },
            "scope": 963,
            "src": "1944:204:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "2647:35:7",
              "statements": [
                {
                  "expression": {
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 955,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "2653:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 957,
                      "indexExpression": {
                        "id": 956,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "2661:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2653:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 958,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "2673:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2653:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:24:7"
                }
              ]
            },
            "documentation": {
              "id": 945,
              "nodeType": "StructuredDocumentation",
              "src": "2152:378:7",
              "text": " @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 952,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 947,
                    "src": "2635:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 953,
                "modifierName": {
                  "id": 951,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1110,
                  "src": "2622:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2622:22:7"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "2560:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "2582:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2554:50:7"
            },
            "returnParameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:0:7"
            },
            "scope": 963,
            "src": "2533:149:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 964,
        "src": "204:2481:7"
      }
    ],
    "src": "32:2654:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-15T22:29:46.684Z",
  "devdoc": {
    "details": "Optional metadata implementation for ERC-721 non-fungible token standard.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "constructor": {
        "details": "Contract constructor."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    },
    "stateVariables": {
      "idToUri": {
        "details": "Mapping from NFT ID to metadata uri."
      },
      "nftName": {
        "details": "A descriptive name for a collection of NFTs."
      },
      "nftSymbol": {
        "details": "An abbreviated name for NFTokens."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "constructor": {
        "notice": "When implementing this contract don't forget to set nftName and nftSymbol."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    },
    "version": 1
  }
}